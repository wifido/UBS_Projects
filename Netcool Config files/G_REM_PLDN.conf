#
# Example ARS configuration for the Netcool/OMNIbus Gateway Server 3.4.1
#
# Ident: $Id: REMEDY.conf $
#

#
# Create a mapping from the Object Server's fields into ARS field Id's
#
# Fields marked ON INSERT ONLY will only be set when the entry is created
# for the first time (ie. they will not be updated)
#
CREATE MAPPING ARS_MAP
(
	750000005 = '@Node'			ON INSERT ONLY,
	750000006 = '@NodeAlias'		ON INSERT ONLY,
	750000007 = '@AlertGroup'		ON INSERT ONLY,
	750000008 = '@AlertKey'			ON INSERT ONLY,
	610000102 = '@Severity'			ON INSERT ONLY,
	536870913 = '@Summary'			ON INSERT ONLY,		
	750000011 = '@StateChange',
	750000009 = '@FirstOccurrence'		ON INSERT ONLY,
	750000010 = '@LastOccurrence'		ON INSERT ONLY,
	750000002 = '@Tally',
	750000004 = '@OwnerUID'			ON INSERT ONLY,
	750000001 = '@OwnerGID'			ON INSERT ONLY,
	750000013 = '@Class'			ON INSERT ONLY,
	610000104 = '@ServerSerial'		ON INSERT ONLY,
	610000105 = '@ServerName'		ON INSERT ONLY,
	240000001 = 'Netcool System'		ON INSERT ONLY,
	240000007 = 'Event from MicroMuse'	ON INSERT ONLY,
	750000018 = '@Subclass'			ON INSERT ONLY,
	750000019 = '@Environment'		ON INSERT ONLY,
	750000016 = '@UserData'			ON INSERT ONLY,
	750000017 = '@UserInt'			ON INSERT ONLY,
	750050929 = '@RemData1'			ON INSERT ONLY,
	750050962 = '@RemData2'			ON INSERT ONLY,
	750051161 = '@XtraTime'			ON INSERT ONLY,
	600007001 = 'Netcool'			ON INSERT ONLY
);

#
# Start up the reader - connect to the Object Server NCOMS
#
# This example uses no filtering.
#
CREATE FILTER RAISETT AS '(TTicket_Status in (3,23) and TT_Region in (1,12,13) )';

START READER SERVER_READER CONNECT TO LDNOBJPROD1 USING FILTER RAISETT AFTER IDUC DO 'update alerts.status set TTicket_Status = TTicket_Status - 1, TT_UpdateTime = getdate' IDUC=29;

#
# Start up the writer
#
START WRITER ARS_WRITER
(
	TYPE = ARS,				# Action Request System
	REVISION = 1,				# Revision One (not really needed)
	MODULE_REVISION = 8,			# reader-writer module version number
	MAP = ARS_MAP,				# Name of map to use
	SERVER = 'itsmldn',			# ARS server to connect to
	#TCP_FLAG = TRUE,			# Only used in DEV and ENG environment as RPC mapper not running.
	#AR_TCP_PORT = 7774,			# Only used in DEV and ENG environment as RPC mapper not running.
	ARS_PORT = 7779,			# RPC Port to use
	SCHEMA = 'UBS:CommunicationManager', 	# ARS schema name
	USER = 'netcool',			# ARS user name
	PASSWORD = '^EGEDBCAIAOGB',		# ARS password
	HOPEFUL_PMC_CLOSE = FALSE,
	FEEDBACK_SERVER = LDNOBJPROD1,		# Which server for feedback
	FEEDBACK_FIELD = 'IntTT_Num',		# Which field in feedback server
	JOURNAL = 750000012,			# Journal field Id in schema
	COUNTER_PART = SERVER_READER,		# Bi-directional counter-part.
	REPOPULATE_TTNUM = TRUE,		# If TTnum is lost repopulate feedback
	UPDATE_ACTION_SQL = '/sbclocal/netcool/omnibus/gates/remedy/ubs_update_action.remedy.sql',
	CLOSE_ACTION_SQL = '/sbclocal/netcool/omnibus/gates/remedy/ubs_close_action.remedy.sql',
#
# Additional Remedy gateway attributes that can be set.
#
	FORWARD_UPDATES = FALSE,		# The gateway drops update events from the Object Server.
	FORWARD_DELETES = FALSE,		# The gateway drops deletes from the Object Server.
	VERIFY_INSERT = TRUE,			# Verify inserts when bi-OS gateway is used.
	CONVERT_INSERT_UPDATE = FALSE,		# Converts Inserts to Updates if Ticket already exists.
	REBUILD_CACHE = FALSE,
	RECLAIM_ARS = FALSE			# Relcaim TTnum from ARS, not OS.
);

#
# Add a route from the reader to the writer so the info gets passed
#
ADD ROUTE FROM SERVER_READER TO ARS_WRITER;

#
# End of file

