
#
#       Copyright (C) 1997, 1998, Omnibus Transport Technologies Ltd.
#       All Rights Reserved
#
#       RESTRICTED RIGHTS:
#
#       This file may have been supplied under a license.
#       It may be used, disclosed, and/or copied only as permitted
#       under such license agreement.  Any copy must contain the
#       above copyright notice and this restricted rights notice.
#       Use, copying, and/or disclosure of the file is strictly
#       prohibited unless otherwise provided in the license agreement.
#
#
# Ident: $Id: tcpport.rules,v 1.1 2002/07/10 11:30:40 nik Development $
#
#######################################################################
 
if(match(@Manager, "MonitorWatch"))
{
	switch(@Summary)
	{
	case "Running ...":
		@Severity = 1
		@AlertGroup = "monitorstat"
		@Type = 2
	case "Going Down ...":
		@Severity = 5
		@AlertGroup = "monitorstat"
		@Type = 1
	default:
	}

	@Summary = @Agent + " monitor on " + @Node + ": " + @Summary
}
else
{
#######################################################################
## The following logic can be used to modify an event based on the
## number of times it's happened in a row.  This segment of the rules
## will only send an event every $interval times it happens:
#
#  $interval = 2
#
#  $temp = real($serviceLevelCounter) / real($interval)
#  $temp1 = real($temp) - int($temp)
#
#  if( match($temp1, "0.000000"))
#  {
#    # Modify the event in some way
#  }
#  else
#  {
#    discard
#  }
#
## The next piece of rulesfile will only send an event if the serviceLevel
## is changing state.  serviceLevel is defined by:
##
##      serviceLevel = 0; then SLA is unknown
##      serviceLevel = 1; then SLA is good
##      serviceLevel = 2; then SLA is marginal
##      serviceLevel = 3; then SLA is failed
#
#  if( match($lastServiceLevel, $serviceLevel))
#  {
#    discard
#  }
#
#######################################################################


	# Get the fully qualified hostname of the machine running the monitor
	if(!exists($monitorDomain))
	{
		if(exists($monitorDNSDomain))
		{
			$monitorDomain = $monitorDNSDomain
		}
		else if(exists($monitorNISDomain))
		{
			$monitorDomain = $monitorNISDomain
		}
	}
	$FQHostname = $monitorHost
	if(exists($monitorDomain))
	{
		$FQHostname = $FQHostname + "." + $monitorDomain
	}


	# Get general information
	@Agent = $profile
#       20050908        Change by Chris Janes of Abilitec
#       @Probe_Rule = "ism_tcp_port" 
        $ruleset = $ruleset + ' - tcp_port Monitor'
#       20050908        End of Change
#	20050727 Change made by Chris Janes of Abilitec
#	@Class = 6800
#       20081119        Changes by Chris Janes of Abilitec TD 5152 & 5153
#       @Class = lookup ($profile,prof_class)
        [@Class, @Subclass, @Environment] = lookup ($profile,prof_class)

#       20081119        End of Change
        if(match(@Class, "6050"))
        {
                @Class = 6800
        	@Probe_Rule = "ism_tcp_port - default Class" 
        }

#	20050727 End of Change

#	20050727 Change made by Chris Janes of Abilitec
#	@Class = 6800

#	20050727 End of Change
	@OwnerUID = 65534
        @OwnerGID = $profileIdentifier
	@Manager= $service + " ISM"

#	20050808 Changes Made by Chris Janes of Abilitec
	@AlertKey = $description
	@AlertGroup = "TCP_Port Monitor"
#       @AlertKey = $totalTime
#	20050808 End of Change
 
        @Node = $hostIP
        @NodeAlias = $host
        @Origin = $FQHostname
	@Grade = $port
	@Poll = $pollInterval
        @Alarm_Dest = $profileNotification
        @Identifier = $profile + $service + $FQHostname + $host + $port + $page + $message + $status + $serviceLevel
	# Uncomment this next line if you wish to update the services
	# information in the ObjectServer
	#$service_name = $service + " on " + $host + ":" + $port + " from " + $FQHostname

        switch ($serviceLevel)  {
                case "0":
                        $slSeverity = 1
                        @Type = 1
                case "1":
                        $slSeverity = 2
                        @Type = 2
                case "2":
                        $slSeverity = 3
                        @Type = 1
                case "3":
                        if(match($profile,'Wttd_LDAP_Facade-TCPPORT'))
			{
				$slSeverity = 5
			}
			else
			{
				$slSeverity = 4
			}
                        @Type = 1
                default:
        }

	@Summary = $description + " on " + $host + ":" + $port + ": " + $message + " (as measured from " + $monitorHost + ")"

	# This is small section that will allow to tag a failure according
	# to when it happened. If any of the foloowing tokens is not set, 
	# it means that the monitor failed on that stage

	if (!exists($lookupTime))
	{
		$stage = "Lookup stage"
	}
	else if (!exists($connectTime))
	{
		$stage = "Connection stage"
	}

	if (exists($stage))
	{
		@Summary = @Summary + " [" + $stage + "]"
	}

	# Adjust summary information if we're doing failure retests
	# This section is designed to separate transient errors/clears 
	# from real errors/clears if the failureRetest functionality 
	# is activated.

	if ((int($failureRetests) > 0) and exists($consecutiveFailures))
	{
		if (int($lastServiceLevel) > int($serviceLevel))
		{
#		20050818 Change by Chris Janes oof Abilitec
#			if (int($lastServiceLevelCounter) > int($failureRetests))
#			{
#				@Identifier = @Identifier + "Real"
#				@Summary = "Real Error Cleared: " + @Summary
#				@Type = 2
#			}
#			else
#			{
#				@Identifier = @Identifier + "Transient"
#				@Summary = "Transient Error Cleared: " + @Summary
#				@Type = 2
#			}
				@Summary = "Error Cleared: " + @Summary
				@Type = 2

#		20050818 end of Change
		}
		else if (int($consecutiveFailures) <= int($failureRetests))
		{
			# Possible transient error 
#		20050818 Change by Chris Janes oof Abilitec
#			@Identifier = @Identifier + "Transient"
#		20050818 end of Change
			@Summary = "Transient Error: " + @Summary
                        @Type = 1
			$tempSeverity = 3
			if(exists($service_name))
			{
				service($service_name, MARGINAL)
			}
		}
		else if(int($consecutiveFailures) > int($failureRetests))
		{
			# Real error
#		20050818 Change by Chris Janes oof Abilitec
#			@Identifier = @Identifier + "Real"
#		20050818 end of Change
			@Summary = "Real Error: " + @Summary
#		20050818 Change by Chris Janes oof Abilitec
			update (@Summary)
#		20050818 end of Change
                        @Type = 1
			$tempSeverity = 5
		}
	}

#	if (match($message, "OK"))  {
#
#	}
#	else if (nmatch($message, "Timed out"))  {
#	    @Summary = $description + " on " + $host + ":" + $port + " (as measured from " + $monitorHost + ") + ":" + $message
#	}
#	else if (nmatch($message, "Connection closed"))  {
#
#	}
#	else if (nmatch($message, "Connection failed"))  {
#
#	}
#	else  {
#
#	}

        #
        # Set Severity to the higher of the Service Level and test result
        #
        if (int($tempSeverity) > int($slSeverity))  {
                $finalSeverity = $tempSeverity
        }
        else  {
                $finalSeverity = $slSeverity
        }
        @Severity = $finalSeverity

        if (exists($totalTime))  {
                @SysInt = real($totalTime) * 1000
        }
	update(@Summary)
	update(@AlertKey)
	update(@Poll)
	update(@Grade)
}
