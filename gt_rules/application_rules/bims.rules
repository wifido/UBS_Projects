#################################################################################
#
#	bims.rules	created by Chris Janes 20080129
#
#################################################################################


case "1057438":

	$ruleset = $ruleset + " Bims"
	$TD_Num = "5213"
	
	#	20081008	Changes by Chris Janes of Abilitec	TD 5082
	#	20090216	Changes by Mahesh Kumar	TD 5213

        if (regmatch($EventIdentifier,".+BCA$")) {
                $ruleset = $ruleset + " eid_BCA"
                
                @Agent = $Transport
                @Class = $ClassID
                #$tmpSummary = substr($MessageText, 72, 250)
                $tmpSummary = $MessageText
                @Description = $MessageText
                $NoElements = split($tmpSummary, SplitArray, ",")
                @Summary = SplitArray[1]
                @AlertKey = SplitArray[2]
                @UserData1= SplitArray[3]
                @UserData2= SplitArray[4]


                @Stream = $Stream
                $temp_length_location = length($Location)
                if (exists($Location) && int($temp_length_location) > 0)
                {
                        @Location = $Location
                }
                @Environment = $Environment
                @UserData = $Userdata
                @UserInt = $Userint
                @UserInt2 = 996
                @SAPNumber = $SAPnumber
                @SourceKey=$SourceKey


                @AlertGroup = $EventIdentifier
                if (exists($ProcessID) && int($ProcessID) > 0)
                {
                        @AlertGroup = $EventIdentifier + "-" + $ProcessID
                }
                $tempEventType = $EventType
                @Display_Hide = 0

                switch ($tempEventType)
                        {
                        case "1":
                                # This indicates that the event is a 'Failure' event
                                # that has an associated event that indicates the failure
                                # is resolved. For this reason we ignore the $TimeToClear
                                # token, just setting the  @Type field in order for the
                                #  Generic Clear automation to function correctly.

                                @Type = $EventType

                        case "2":
                                # This indicates that the event is telling us that the
                                # problem has been resolved (A clear event).
                                # Here we set the @Type field correctly for the Generic
                                # Clear Automation. Additionally we modify
                                # the @Severity field value to insert the 'Clear' event
                                # as Severity = 1. This leads to greater
                                # efficiency in the Generic Clear Automation.

                                @Type = 2
                                @Severity = 1

                        default:

                                @Type = 1
                }
                        $tempIdentifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + @Type + " " + @Agent + " " + "SOCKETPROD" + " " + @Class + " " + @Subclass + " " + @Environment

        }

        else {
                $ruleset = $ruleset + " default"
                @Agent = $Transport
                @Class = $ClassID
                @Summary = $MessageText
                @Stream = $Stream
                $temp_length_location = length($Location)
                if (exists($Location) && int($temp_length_location) > 0)
                {
                        @Location = $Location
                }
                @Environment = $Environment
                @Subclass = $Subclass
                @UserData = $Userdata
                @UserInt = $Userint
                @SAPNumber = $SAPnumber
                @SourceKey=$SourceKey
                @RemData1=$RemData1

                @RemData2=$RemData2
                if (exists($Component))
                {
                        @AlertKey = $Component
                }
                else
                {
                        @AlertKey = $SAPname
                }

                # Create the AlertGroup field here. Value will change
                # dependant on the presence of $ProcessID token
                @AlertGroup = $EventIdentifier
                if (exists($ProcessID) && int($ProcessID) > 0)
                {
                        @AlertGroup = $EventIdentifier + "-" + $ProcessID
                }
                
                $tempEventType = $EventType
                @Display_Hide = 0
                switch ($tempEventType)
                {
                        case "2":
                                @Type = 2
                                @Severity = 1
                        default:
                                @Type = $EventType
                }

                $tempIdentifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + @Type + " " + @Agent + " " + "SOCKETPROD" + " " + @Class + " "
+ @Subclass + " " + @Environment                

        }


