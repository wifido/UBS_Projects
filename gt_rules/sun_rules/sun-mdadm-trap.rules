###############################################################################
#
#	SUN X4540 mdadm monitor traps
#	Rulesfile is based on requirement from Richardi Harper
#
#	20090317    Mahesh Kumar	Original
#
###############################################################################
case "UBS-DSS-Eng-Agents":

@Agent = "UBS-DSS-Eng-Agents"
$ruleset = $ruleset + " " + @Agent
$TD_Num = "5225"
@Class = 123000

#################################################################################
#
#	20080213	Following section Added for development only
#@Description = "$1 = " + $1 + " $2 = " + $2 + " $3 = " + $3 + " $4 = " + $4 + " $5 = " + $5 + " $6 = " + $6 + " $7 = " + $7 + " $8 = " + $8 + " $9 = " + $9 + " $10 = " + $10 
#
#################################################################################

$ruleset = $ruleset + " " + $specific-trap
switch($specific-trap) 
	{
		case "1": ### - Sun X4540 RAID array traps via mdadm
                         ###############################################################################
                         #       The trap will use the UBS enterprise OID (.1.3.6.1.4.1.10982) and will
                         #       have a generic type of 6, specific type of 1
                         #       The trap will have 4 varbinds (bits of information within the trap):
                         #       .1.3.6.1.4.1.10982.1.1 s <message as passed to the script>
                         #       .1.3.6.1.4.1.10982.1.2 s <severity: Fail -> Critical, RebuildFinished -> Clear>
                         #       .1.3.6.1.4.1.10982.1.3 s <affected md>
                         #       .1.3.6.1.4.1.10982.1.4 s <affected physical disk - optional>
                         ###############################################################################
			$sunraidTrapMessage = $1
			$sunraidTrapSeverity = $2
			$sunraidTrapMd = $3
			$sunraidTrapPhysicalDisk = $4

			@AlertKey = $3
			$tmpSunSev = $2
                        #specific type - set to mdadm, per requirement
			@AlertGroup = "mdadm"
	                $sunRaidIdentifierAddon = @AlertKey + @AlertGroup
			@Description = $4
	
			# Switch based on message	
			switch($1)
			{
			    case "Fail":
                                if (exists($sunraidTrapMd)) {
			            @Summary = "Linux Software RAID: Member " + $4 + " has failed in array " + $3
				}
				else {
				    @Summary = "Linux Software RAID: Insufficient information"
				}

			    case "RebuildFinished":
                                if (exists($sunraidTrapMd)) {
			            @Summary = "Linux Software RAID: Array " + $3 + " has finished rebuilding"
				}
				else {
				    @Summary = "Linux Software RAID: Insufficient information"
			        }

		            default:
			        @Summary = $4
			}


		default:
			@Summary = "Unknown Specific Trap Number (" + $specific-trap + ") Received for Enterprise " + $enterprise
			@Severity = 1
			@Identifier = @Node + " " + @Agent + " " + @Manager + " " + $enterprise + " " + $generic-trap + " " + $specific-trap
	}

	if (exists($tmpSunSev))
	{
		$LowerTmpSeverity = lower($tmpSunSev)
		[@Severity,@Type,$chuck]=lookup($LowerTmpSeverity,app_MttrapdSeverity)
	}
	else
	{
		@Severity = 1
		@Type =1
	}
	
	@Identifier = @Node + " " + @Agent + " " + @Manager + " " + $enterprise + " " + $generic-trap + " " + $specific-trap + @Type + $sunRaidIdentifierAddon
